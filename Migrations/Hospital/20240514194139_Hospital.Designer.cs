// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthNCare.Migrations.Hospital
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20240514194139_Hospital")]
    partial class Hospital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Doctor", b =>
                {
                    b.Property<string>("DoctorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DoctorId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("HealthNCare.Models.AppointmentDate", b =>
                {
                    b.Property<string>("AppointmentDateId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("DoctorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AppointmentDateId");

                    b.HasIndex("DoctorId");

                    b.ToTable("AppointmentDates");
                });

            modelBuilder.Entity("HealthNCare.Models.AppointmentTime", b =>
                {
                    b.Property<string>("AppointmentTimeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AppointmentDateId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("AppointmentTimeId");

                    b.HasIndex("AppointmentDateId");

                    b.ToTable("AppointmentTimes");
                });

            modelBuilder.Entity("HealthNCare.Models.Department", b =>
                {
                    b.Property<string>("DepartmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("HospitalId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DepartmentId");

                    b.HasIndex("HospitalId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("HealthNCare.Models.Location", b =>
                {
                    b.Property<string>("LocationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Hospital", b =>
                {
                    b.Property<string>("HospitalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("HospitalId");

                    b.HasIndex("LocationId");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("Doctor", b =>
                {
                    b.HasOne("HealthNCare.Models.Department", "Department")
                        .WithMany("Doctors")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HealthNCare.Models.AppointmentDate", b =>
                {
                    b.HasOne("Doctor", "Doctor")
                        .WithMany("AppointmentDates")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("HealthNCare.Models.AppointmentTime", b =>
                {
                    b.HasOne("HealthNCare.Models.AppointmentDate", "AppointmentDate")
                        .WithMany("AppointmentTimes")
                        .HasForeignKey("AppointmentDateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppointmentDate");
                });

            modelBuilder.Entity("HealthNCare.Models.Department", b =>
                {
                    b.HasOne("Hospital", "Hospital")
                        .WithMany("Departments")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("Hospital", b =>
                {
                    b.HasOne("HealthNCare.Models.Location", "Location")
                        .WithMany("Hospitals")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Doctor", b =>
                {
                    b.Navigation("AppointmentDates");
                });

            modelBuilder.Entity("HealthNCare.Models.AppointmentDate", b =>
                {
                    b.Navigation("AppointmentTimes");
                });

            modelBuilder.Entity("HealthNCare.Models.Department", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("HealthNCare.Models.Location", b =>
                {
                    b.Navigation("Hospitals");
                });

            modelBuilder.Entity("Hospital", b =>
                {
                    b.Navigation("Departments");
                });
#pragma warning restore 612, 618
        }
    }
}
